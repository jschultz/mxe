--- a/tools/build/src/tools/clang-linux.jam	2019-08-28 07:03:05.000000000 +0800
+++ b/tools/build/src/tools/clang-linux.jam	2019-08-28 07:08:30.000000000 +0800
@@ -96,10 +96,10 @@
   gcc.setup-fpic $(targets) : $(sources) : $(properties) ;
   gcc.setup-address-model $(targets) : $(sources) : $(properties) ;
 
-  local pth-file = [ on $(<) return $(PCH_FILE) ] ;
+  local pch-file = [ on $(<) return $(PCH_FILE) ] ;
 
-  if $(pth-file) {
-    DEPENDS $(<) : $(pth-file) ;
+  if $(pch-file) {
+    DEPENDS $(<) : $(pch-file) ;
     clang-linux.compile.c++.with-pch $(targets) : $(sources) ;
   }
   else {
@@ -113,7 +113,7 @@
 
 actions compile.c++.with-pch bind PCH_FILE
 {
-  "$(CONFIG_COMMAND)" -c -x c++ $(OPTIONS) $(USER_OPTIONS) -D$(DEFINES) -I"$(INCLUDES)" -Xclang -include-pth -Xclang "$(PCH_FILE)" -o "$(<)" "$(>)"
+  "$(CONFIG_COMMAND)" -c -x c++ $(OPTIONS) $(USER_OPTIONS) -D$(DEFINES) -I"$(INCLUDES)" -Xclang -include-pch -Xclang "$(PCH_FILE)" -o "$(<)" "$(>)"
 }
 
 rule compile.c ( targets * : sources * : properties * )
@@ -122,10 +122,10 @@
   gcc.setup-fpic $(targets) : $(sources) : $(properties) ;
   gcc.setup-address-model $(targets) : $(sources) : $(properties) ;    
 
-  local pth-file = [ on $(<) return $(PCH_FILE) ] ;
+  local pch-file = [ on $(<) return $(PCH_FILE) ] ;
 
-  if $(pth-file) {
-    DEPENDS $(<) : $(pth-file) ;
+  if $(pch-file) {
+    DEPENDS $(<) : $(pch-file) ;
     clang-linux.compile.c.with-pch $(targets) : $(sources) ;
   }
   else {
@@ -140,7 +140,7 @@
 
 actions compile.c.with-pch bind PCH_FILE
 {
-  "$(CONFIG_COMMAND)" -c -x c $(OPTIONS) $(USER_OPTIONS) -D$(DEFINES) -I"$(INCLUDES)" -Xclang -include-pth -Xclang "$(PCH_FILE)" -c -o "$(<)" "$(>)"
+  "$(CONFIG_COMMAND)" -c -x c $(OPTIONS) $(USER_OPTIONS) -D$(DEFINES) -I"$(INCLUDES)" -Xclang -include-pch -Xclang "$(PCH_FILE)" -c -o "$(<)" "$(>)"
 }
 
 ###############################################################################
@@ -153,7 +153,7 @@
 }
 
 actions compile.c++.pch {
-  rm -f "$(<)" && "$(CONFIG_COMMAND)" -x c++-header $(OPTIONS) $(USER_OPTIONS) -D$(DEFINES) -I"$(INCLUDES)" -Xclang -emit-pth -o "$(<)" "$(>)"
+  rm -f "$(<)" && "$(CONFIG_COMMAND)" -x c++-header $(OPTIONS) $(USER_OPTIONS) -D$(DEFINES) -I"$(INCLUDES)" -Xclang -emit-pch -o "$(<)" "$(>)"
 }
 
 rule compile.c.pch ( targets * : sources * : properties * ) {
@@ -164,7 +164,7 @@
 
 actions compile.c.pch
 {
-  rm -f "$(<)" && "$(CONFIG_COMMAND)" -x c-header $(OPTIONS) $(USER_OPTIONS) -D$(DEFINES) -I"$(INCLUDES)" -Xclang -emit-pth -o "$(<)" "$(>)"
+  rm -f "$(<)" && "$(CONFIG_COMMAND)" -x c-header $(OPTIONS) $(USER_OPTIONS) -D$(DEFINES) -I"$(INCLUDES)" -Xclang -emit-pch -o "$(<)" "$(>)"
 }
 
 ###############################################################################
